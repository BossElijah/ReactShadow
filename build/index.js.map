{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/index.tsx", "../src/index.tsx", "../src/utils.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import React from 'react';\nimport { PassThrough } from 'stream';\nimport { renderToPipeableStream } from 'react-dom/server';\nimport { RemixServer } from '@remix-run/react';\nimport { Response } from '@remix-run/node';\nimport type { EntryContext, Headers } from '@remix-run/node';\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n    request: Request,\n    responseStatusCode: number,\n    responseHeaders: Headers,\n    remixContext: EntryContext\n) {\n    return new Promise((resolve, reject) => {\n        let didError = false;\n\n        const { pipe, abort } = renderToPipeableStream(<RemixServer context={remixContext} url={request.url} />, {\n            onShellReady() {\n                let body = new PassThrough();\n\n                responseHeaders.set('Content-Type', 'text/html');\n\n                resolve(\n                    new Response(body, {\n                        status: didError ? 500 : responseStatusCode,\n                        headers: responseHeaders,\n                    })\n                );\n                pipe(body);\n            },\n            onShellError(err: unknown) {\n                reject(err);\n            },\n            onError(error: unknown) {\n                didError = true;\n                console.error(error);\n            },\n        });\n        setTimeout(abort, ABORT_DELAY);\n    });\n}\n", "import React from 'react';\nimport type { MetaFunction } from '@remix-run/node';\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from '@remix-run/react';\nimport { ReactElement } from 'react';\n\nexport const meta: MetaFunction = () => ({\n    charset: 'utf-8',\n    title: 'New Remix App',\n    viewport: 'width=device-width,initial-scale=1',\n});\n\nexport default function Root(): ReactElement {\n    return (\n        <html lang=\"en\">\n            <head>\n                <Meta />\n                <Links />\n            </head>\n\n            <body>\n                <Outlet />\n                <ScrollRestoration />\n                <Scripts />\n                <LiveReload />\n            </body>\n        </html>\n    );\n}\n", "import root from '../../src';\n\nimport React, { ReactElement } from 'react';\n// import styles from './styles.css';\n\nexport default function Home(): ReactElement {\n    return (\n        <root.section className=\"weather\">\n            {/* <style type=\"text/css\">{styles.toString()}</style> */}\n            {/* <City {...props} /> */}\n            Hii\n        </root.section>\n    );\n}\n", "import React, { FC, ReactElement } from 'react';\nimport { decamelize } from 'humps';\nimport { ComponentProps, ProxyProps } from './types';\nimport { useShadow } from './utils';\n\nfunction ReactShadow({\n    Container,\n    withSSR = false,\n    delegatesFocus = false,\n    styleSheets = [],\n    fallback,\n    children,\n    ...props\n}: ComponentProps): ReactElement {\n    const shadow = useShadow({ delegatesFocus, styleSheets, withSSR, children });\n\n    return (\n        <Container ref={shadow.ref} {...props}>\n            <shadow.Children>{children}</shadow.Children>\n        </Container>\n    );\n}\n\nconst tags = new Map<string, typeof ReactShadow>();\n\nexport default new Proxy({} as Record<string, FC<ProxyProps>>, {\n    get<T>(_, name: string) {\n        const tagName = decamelize(name, { separator: '-' });\n\n        if (!tags.has(name)) {\n            tags.set(name, (props: ProxyProps): ReactElement => {\n                return <ReactShadow Container={tagName} {...props} />;\n            });\n        }\n\n        return tags.get(name);\n    },\n});\n", "import React, { FC, useEffect, useMemo, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { UseShadowArgs, UseShadowReturn, ChildrenProps } from './types';\n\nexport function useShadow({ delegatesFocus, styleSheets, ...props }: UseShadowArgs): UseShadowReturn {\n    const containerRef = useRef<HTMLElement>(null);\n    const [shadowRoot, setShadowRoot] = useState<null | ShadowRoot>(null);\n    const Children = useMemo(\n        (): FC<ChildrenProps> =>\n            ({ children }) =>\n                <>{shadowRoot ? createPortal(children, shadowRoot) : props.children}</>,\n        [shadowRoot]\n    );\n\n    useEffect((): void => {\n        setShadowRoot((): null | ShadowRoot => {\n            try {\n                const root =\n                    containerRef.current?.shadowRoot ??\n                    containerRef.current?.attachShadow({ mode: 'open', delegatesFocus });\n                root && (root.adoptedStyleSheets = styleSheets);\n                return root ?? null;\n            } catch {\n                return null;\n            }\n        });\n    }, []);\n\n    return useMemo(() => ({ ref: containerRef, shadowRoot, Children }), [containerRef, shadowRoot, Children]);\n}\n", "export default {'version':'c55cd18b','entry':{'module':'/build/entry.client-T2TLZAGK.js','imports':['/build/_shared/chunk-IMF64WG6.js','/build/_shared/chunk-S64AOWX5.js','/build/_shared/chunk-IE366Y5W.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-YLZKFWWP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-OGF6GQTU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-C55CD18B.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AACA,oBAA4B,mBAC5B,gBAAuC,6BACvC,eAA4B,6BAC5B,cAAyB,4BAJzB,2DAOM,cAAc;AAEL,SAAR,cACH,SACA,oBACA,iBACA,cACF;AACE,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,QAAI,WAAW,IAET,EAAE,MAAM,MAAM,QAAI,sCAAuB,mDAAC;AAAA,MAAY,SAAS;AAAA,MAAc,KAAK,QAAQ;AAAA,OAAjD;AAAA;AAAA;AAAA;AAAA,WAAsD,GAAI;AAAA,MACrG,eAAe;AACX,YAAI,OAAO,IAAI,0BAAY;AAE3B,wBAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,UACI,IAAI,qBAAS,MAAM;AAAA,YACf,QAAQ,WAAW,MAAM;AAAA,YACzB,SAAS;AAAA,UACb,CAAC;AAAA,QACL,GACA,KAAK,IAAI;AAAA,MACb;AAAA,MACA,aAAa,KAAc;AACvB,eAAO,GAAG;AAAA,MACd;AAAA,MACA,QAAQ,OAAgB;AACpB,mBAAW,IACX,QAAQ,MAAM,KAAK;AAAA,MACvB;AAAA,IACJ,CAAC;AACD,eAAW,OAAO,WAAW;AAAA,EACjC,CAAC;AACL;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAEA,IAAAA,gBAA4E,6BAF5E,2DAKa,OAAqB,OAAO;AAAA,EACrC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AACd;AAEe,SAAR,OAAsC;AACzC,SACI,mDAAC;AAAA,IAAK,MAAK;AAAA,IACP;AAAA,yDAAC;AAAA,QACG;AAAA,6DAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UACN,mDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,iBAAO;AAAA;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAEA,mDAAC;AAAA,QACG;AAAA,6DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,iBAAQ;AAAA,UACR,mDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,iBAAmB;AAAA,UACnB,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA,UACT,mDAAC,8BAAD;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA;AAAA,SAJhB;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA;AAAA,KAXJ;AAAA;AAAA;AAAA;AAAA,SAYA;AAER;;;AC3BA;AAAA;AAAA;AAAA;;;ACCA,mBAA2B;;;ACD3B,IAAAC,gBAAgE,kBAChE,mBAA6B,sBAD7B;AAIO,SAAS,UAAU,EAAE,gBAAgB,gBAAgB,MAAM,GAAmC;AACjG,MAAM,mBAAe,sBAAoB,IAAI,GACvC,CAAC,YAAY,aAAa,QAAI,wBAA4B,IAAI,GAC9D,eAAW;AAAA,IACb,MACI,CAAC,EAAE,SAAS,MACR;AAAA,MAAG,2BAAa,+BAAa,UAAU,UAAU,IAAI,MAAM;AAAA,OAA3D;AAAA;AAAA;AAAA;AAAA,WAAoE;AAAA,IAC5E,CAAC,UAAU;AAAA,EACf;AAEA,sCAAU,MAAY;AAClB,kBAAc,MAAyB;AAf/C;AAgBY,UAAI;AACA,YAAM,SACF,kBAAa,YAAb,mBAAsB,iBACtB,kBAAa,YAAb,mBAAsB,aAAa,EAAE,MAAM,QAAQ,eAAe;AACtE,wBAAS,KAAK,qBAAqB,cAC5B,QAAQ;AAAA,MACnB,QAAE;AACE,eAAO;AAAA,MACX;AAAA,IACJ,CAAC;AAAA,EACL,GAAG,CAAC,CAAC,OAEE,uBAAQ,OAAO,EAAE,KAAK,cAAc,YAAY,SAAS,IAAI,CAAC,cAAc,YAAY,QAAQ,CAAC;AAC5G;;;AD7BA;AAKA,SAAS,YAAY;AAAA,EACjB;AAAA,EACA,UAAU;AAAA,EACV,iBAAiB;AAAA,EACjB,cAAc,CAAC;AAAA,EACf;AAAA,EACA;AAAA,KACG;AACP,GAAiC;AAC7B,MAAM,SAAS,UAAU,EAAE,gBAAgB,aAAa,SAAS,SAAS,CAAC;AAE3E,SACI,mDAAC;AAAA,IAAU,KAAK,OAAO;AAAA,IAAM,GAAG;AAAA,IAC5B,6DAAC,OAAO,UAAP;AAAA,MAAiB;AAAA,OAAlB;AAAA;AAAA;AAAA;AAAA,WAA2B;AAAA,KAD/B;AAAA;AAAA;AAAA;AAAA,SAEA;AAER;AAEA,IAAM,OAAO,oBAAI,IAAgC,GAE1C,cAAQ,IAAI,MAAM,CAAC,GAAqC;AAAA,EAC3D,IAAO,GAAG,MAAc;AACpB,QAAM,cAAU,yBAAW,MAAM,EAAE,WAAW,IAAI,CAAC;AAEnD,WAAK,KAAK,IAAI,IAAI,KACd,KAAK,IAAI,MAAM,CAAC,UACL,mDAAC;AAAA,MAAY,WAAW;AAAA,MAAU,GAAG;AAAA,OAArC;AAAA;AAAA;AAAA;AAAA,WAA4C,CACtD,GAGE,KAAK,IAAI,IAAI;AAAA,EACxB;AACJ,CAAC;;;ADrCD;AAKe,SAAR,OAAsC;AACzC,SACI,mDAAC,YAAK,SAAL;AAAA,IAAa,WAAU;AAAA,IAEO;AAAA,KAF/B;AAAA;AAAA;AAAA;AAAA,SAIA;AAER;;;AGbA,IAAO,0BAAQ,EAAC,SAAU,YAAW,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,mCAAkC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,EAAC,GAAE,KAAM,8BAA6B;;;ACKruB,IAAM,uBAAuB,gBACvB,aAAa,WACb,QAAQ,EAAE,QAAQ,qBAAY,GAC9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["import_react", "import_react"]
}
